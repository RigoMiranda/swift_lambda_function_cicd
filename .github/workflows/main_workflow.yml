
name: Main Workflow
on:
  push:
    branches: [ master ]
jobs:
  build:
    strategy:
      matrix:
        node_version: [12.x]
        python_version: [3.8.x]
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2

#     - name: Install Swift 
#       run: |

#         # Dependencies:
#         sudo apt-get install \
#           binutils \
#           git \
#           gnupg2 \
#           libc6-dev \
#           libcurl4 \
#           libedit2 \
#           libgcc-9-dev \
#           libpython2.7 \
#           libsqlite3-0 \
#           libstdc++-9-dev \
#           libxml2 \
#           libz3-dev \
#           pkg-config \
#           tzdata \
#           zlib1g-dev

#         # Download Swift:
#         wget https://swift.org/builds/swift-5.2.4-release/ubuntu2004/swift-5.2.4-RELEASE/swift-5.2.4-RELEASE-ubuntu20.04.tar.gz

#         tar xzf swift-5.2.4-RELEASE-ubuntu20.04.tar.gz
#         sudo mv swift-5.2.4-RELEASE-ubuntu20.04 /usr/share/swift

#         echo "export PATH=/usr/share/swift/usr/bin:$PATH" >> ~/.bashrc
#         source  ~/.bashrc

#         swift --version

    # We need to AWS CLI to configure the account and profile credentials.
    # Note: The --profile {default} needs to be the same that the profileName in the init.sh
    - name: Install AWS CLI & Configuring Profile Credentials
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        sudo apt-get install awscli
        # aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile default
        # aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile default
        # aws configure set default.region us-east-1

    - name: Installing AWS CDK
      uses: actions/setup-node@v1
      with:
        version: ${{ matrix.node_version }}
        run: |
          sudo npm install -g aws-cdk
          cdk --version

    - name: Deploying Infrastructure
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python_version }}
        run : |
          cd infrastucture/

          python3 -m venv .env
          source .env/bin/activate
          pip3 install -r requirements.txt

          cdk synth
